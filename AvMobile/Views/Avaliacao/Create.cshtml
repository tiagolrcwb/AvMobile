@model Modelo.Cadastros.Avaliacao
@{
    Layout = "../Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Cadastrar nova Avaliação</title>
</head>
<body>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script src=”~/Scripts/MicrosoftAjax.js” type=”text/javascript”></script>
    <script src=”~/Scripts/MicrosoftMvcAjax.js” type=”text/javascript”></script>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Cadastro de Avaliações</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-12">
                    <div class="control-label col-md-3">@Html.LabelFor(model => model.imeiId)</div>
                    <div class="col-md-4">
                        @Html.DropDownList("imeiId", null, htmlAttributes: new { @class = "form-control selectListImei" })
                        @Html.ValidationMessageFor(model => model.imeiId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 modeloDiv">
                    <div class="col-md-12">
                        <span class="control-label modeloNome"></span>
                    </div>
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-12">
                    <label class="control-label col-md-3" for="p1">Condições da Tela</label>
                    <div class="btn-group btn-group-sm" data-toggle="buttons">

                        <label class="btn btn-primary ">
                            Sem Riscos
                            @Html.RadioButtonFor(model => model.p1, "1", new { @class = "p1" })

                        </label>
                        <label class="btn btn-primary">
                            Riscada
                            @Html.RadioButtonFor(model => model.p1, "2", new { @class = "p1" })
                        </label>
                        <label class="btn btn-primary">
                            Trincada
                            @Html.RadioButtonFor(model => model.p1, "3", new { @class = "p1" })
                        </label>
                        <label class="btn btn-primary">
                            Quebrada
                            @Html.RadioButtonFor(model => model.p1, "4", new { @class = "p1" })
                        </label>
                    </div>

                    @Html.ValidationMessageFor(model => model.p1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-12">
                    <label class="control-label col-md-3" for="p2">Condições da Carcaça</label>
                    <div class="btn-group btn-group-sm" data-toggle="buttons">

                        <label class="btn btn-primary">
                            Sem Riscos
                            @Html.RadioButtonFor(model => model.p2, "1", new { @class = "p2" })

                        </label>
                        <label class="btn btn-primary">
                            Riscada
                            @Html.RadioButtonFor(model => model.p2, "2", new { @class = "p2" })
                        </label>
                        <label class="btn btn-primary">
                            Trincada
                            @Html.RadioButtonFor(model => model.p2, "3", new { @class = "p2" })
                        </label>
                        <label class="btn btn-primary">
                            Quebrada
                            @Html.RadioButtonFor(model => model.p2, "4", new { @class = "p2" })
                        </label>
                    </div>

                    @Html.ValidationMessageFor(model => model.p2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-12">
                    <label class="control-label col-md-3" for="p3">Condições da Bateria</label>
                    <div class="btn-group btn-group-sm" data-toggle="buttons">

                        <label class="btn btn-primary">
                            Nova
                            @Html.RadioButtonFor(model => model.p3, "1", new { @class = "p3" })
                        </label>
                        <label class="btn btn-primary">
                            Duração Baixa
                            @Html.RadioButtonFor(model => model.p3, "2", new { @class = "p3" })
                        </label>
                        <label class="btn btn-primary">
                            Danificada
                            @Html.RadioButtonFor(model => model.p3, "3", new { @class = "p3" })
                        </label>
                        
                    </div>

                    @Html.ValidationMessageFor(model => model.p3, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">

                <div class="col-md-12">
                    <label class="control-label col-md-3" for="p4">Condições dos Botoes</label>
                    <div class="btn-group btn-group-sm" data-toggle="buttons">

                        <label class="btn btn-primary">
                            Integros
                            @Html.RadioButtonFor(model => model.p4, "1", new { @class = "p4" })

                        </label>
                        <label class="btn btn-primary">
                            Quebrados
                            @Html.RadioButtonFor(model => model.p4, "2", new { @class = "p4" })
                        </label>

                    </div>

                    @Html.ValidationMessageFor(model => model.p4, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-12">
                    <label class="control-label col-md-3" for="p5">Condições do Carregador</label>
                    <div class="btn-group btn-group-sm" data-toggle="buttons">

                        <label class="btn btn-primary">
                            Funcionando
                            @Html.RadioButtonFor(model => model.p5, "1", new { @class = "p5" })
                        </label>
                        <label class="btn btn-primary">
                            Defeito
                            @Html.RadioButtonFor(model => model.p5, "2", new { @class = "p5" })
                        </label>

                    </div>

                    @Html.ValidationMessageFor(model => model.p5, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                <div class="col-md-12">
                    <div class="control-label col-md-3">Observação:</div>
                    <div class="col-md-4">

                        @Html.TextAreaFor(model => model.obs, new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.obs, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <div class="control-label col-md-3">Valor do Aparelho: R$</div>
                    <div class="col-md-1">

                        <span class="control-label valorOriginal"></span>

    
                    </div>
                    <div class="control-label col-md-2">Desconto: R$</div>
                    <div class="col-md-1">

                        <span class="control-label valorAv"></span>


                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 valorFinalDiv">
                    <div class="control-label col-md-3">Valor de Compra: R$</div>
                    <div class="col-md-1">
                        <span class="control-label valorFinal"></span>
                    </div>
                </div>
            </div>
            @Html.HiddenFor(model => model.valorAv, new { Value = 0 })
            @Html.HiddenFor(model => model.aceite, new { Value = 0 })
            @Html.HiddenFor(model => model.usuarioId, new { Value = ViewBag.UsuarioId })
            @Html.HiddenFor(model => model.filialId, new { Value = ViewBag.FilialId })


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cadastrar Avaliação" disabled class="btn btn-default formSend" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Voltar", "Index")
    </div>
</body>
<script>
    $(document).ready(function () {

        //atributos iniciais 
        var id = 0
        var valorOriginal = 0;
        var p1 = 0;
        var p2 = 0
        var p3 = 0
        var p4 = 0
        var p5 = 0
        //Adicionando um option no inicio do select
        $(".selectListImei").prepend("<option value='0' selected='selected' id='primeiroItemSelect'>---- Selecione um Imei ----</option>");

       
        //recuperando o objeto aparelho a cada mudança do select
        $('.selectListImei').change(function () {
            console.log(id = $(this).find(":selected").val());
            if (id == 0) {
                $(".formSend").attr("disabled", "disabled");
            } else {
                $(".formSend").removeAttr('disabled');
            }
                 
            $.getJSON('ObterAparelho', { id: id }, function (data) {
                console.log(valorOriginal = data.valor);
                console.log(modelo = data.modelo);
                $('.valorOriginal').html(valorOriginal);
                $('.modeloNome').html(modelo);
            });
        });

        //recuperando o valor da pergunta de cada radio
        $('.p1').change(function () {
            var op = $(this).val();
            var p = 'p1';
            console.log(op + " - " + p + " - " + id);

            $.getJSON('RetornaDesconto', { p: p, op: op, id: id }, function (data) {
                p1 = data;
                console.log(p1);
                $('.valorAv').html(somaPerguntas());
            });
        });
        //recuperando o valor da pergunta de cada radio
        $('.p2').change(function () {
            var op = $(this).val();
            var p = 'p2';
            console.log(op + " - " + p + " - " + id);

            $.getJSON('RetornaDesconto', { p: p, op: op, id: id }, function (data) {
                p2 = data;
                console.log(p2);
                $('.valorAv').html(somaPerguntas());
            });
        });
        //recuperando o valor da pergunta de cada radio
        $('.p3').change(function () {
            var op = $(this).val();
            var p = 'p3';
            console.log(op + " - " + p + " - " + id);

            $.getJSON('RetornaDesconto', { p: p, op: op, id: id }, function (data) {
                p3 = data;
                console.log(p3);
                $('.valorAv').html(somaPerguntas());
            });
        });
        //recuperando o valor da pergunta de cada radio
        $('.p4').change(function () {
            var op = $(this).val();
            var p = 'p4';
            console.log(op + " - " + p + " - " + id);

            $.getJSON('RetornaDesconto', { p: p, op: op, id: id }, function (data) {
                p4 = data;
                console.log(p4);
                $('.valorAv').html(somaPerguntas());
            });
        });
        //recuperando o valor da pergunta de cada radio
        $('.p5').change(function () {
            var op = $(this).val();
            var p = 'p5';
            console.log(op + " - " + p + " - " + id);

            $.getJSON('RetornaDesconto', { p: p, op: op, id: id }, function (data) {
                p5 = data;
                console.log(p5);
                $('.valorAv').html(somaPerguntas());
            });
        });
        //Função que retorna o a soma dos descontos e atualiza o valor a pagar dinamicamente
        function somaPerguntas() {
            soma = p1 + p2 + p3 + p4 + p5;
               
            if (soma > valorOriginal) {
                soma = valorOriginal;
            }

            $("#valorAv").val(valorOriginal - soma);
            $(".valorFinal").html(valorOriginal - soma);
            return soma;
        }



            
    });
</script>
</html>
